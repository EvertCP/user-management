{"ast":null,"code":"const TOKEN_KEY = 'jwt_token';\nconst USER_KEY = 'jwt_user';\nconst API_URL = 'http://localhost:5000/api/auth';\nexport function getToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\nexport function getUser() {\n  const user = localStorage.getItem(USER_KEY);\n  return user ? JSON.parse(user) : null;\n}\nexport function logout() {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n}\nexport async function register({\n  nombre,\n  correo,\n  password,\n  fecha_nacimiento,\n  estado_nacimiento\n}) {\n  console.log('Enviando fetch a /register-user', {\n    nombre,\n    correo,\n    password,\n    fecha_nacimiento,\n    estado_nacimiento\n  });\n  const res = await fetch(`${API_URL}/register-user`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      nombre,\n      correo,\n      password,\n      fecha_nacimiento,\n      estado_nacimiento\n    })\n  });\n  console.log('Respuesta del fetch', res);\n  if (!res.ok) throw new Error('Error al registrar usuario');\n  return await res.json();\n}\nexport async function login(correo, password) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      correo,\n      password\n    })\n  });\n  if (!res.ok) throw new Error('Credenciales inválidas');\n  const data = await res.json();\n  localStorage.setItem(TOKEN_KEY, data.token);\n  localStorage.setItem(USER_KEY, JSON.stringify(data.user));\n}","map":{"version":3,"names":["TOKEN_KEY","USER_KEY","API_URL","getToken","localStorage","getItem","getUser","user","JSON","parse","logout","removeItem","register","nombre","correo","password","fecha_nacimiento","estado_nacimiento","console","log","res","fetch","method","headers","body","stringify","ok","Error","json","login","data","setItem","token"],"sources":["C:/Users/evert/CascadeProjects/user-management-app/frontend/src/services/authService.js"],"sourcesContent":["const TOKEN_KEY = 'jwt_token';\nconst USER_KEY = 'jwt_user';\nconst API_URL = 'http://localhost:5000/api/auth';\n\nexport function getToken() {\n  return localStorage.getItem(TOKEN_KEY);\n}\n\nexport function getUser() {\n  const user = localStorage.getItem(USER_KEY);\n  return user ? JSON.parse(user) : null;\n}\n\nexport function logout() {\n  localStorage.removeItem(TOKEN_KEY);\n  localStorage.removeItem(USER_KEY);\n}\n\nexport async function register({ nombre, correo, password, fecha_nacimiento, estado_nacimiento }) {\n  console.log('Enviando fetch a /register-user', { nombre, correo, password, fecha_nacimiento, estado_nacimiento });\n  const res = await fetch(`${API_URL}/register-user`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ nombre, correo, password, fecha_nacimiento, estado_nacimiento })\n  });\n  console.log('Respuesta del fetch', res);\n  if (!res.ok) throw new Error('Error al registrar usuario');\n  return await res.json();\n}\n\nexport async function login(correo, password) {\n  const res = await fetch(`${API_URL}/login`, {\n    method: 'POST',\n    headers: { 'Content-Type': 'application/json' },\n    body: JSON.stringify({ correo, password })\n  });\n  if (!res.ok) throw new Error('Credenciales inválidas');\n  const data = await res.json();\n  localStorage.setItem(TOKEN_KEY, data.token);\n  localStorage.setItem(USER_KEY, JSON.stringify(data.user));\n}\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,WAAW;AAC7B,MAAMC,QAAQ,GAAG,UAAU;AAC3B,MAAMC,OAAO,GAAG,gCAAgC;AAEhD,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,OAAOC,YAAY,CAACC,OAAO,CAACL,SAAS,CAAC;AACxC;AAEA,OAAO,SAASM,OAAOA,CAAA,EAAG;EACxB,MAAMC,IAAI,GAAGH,YAAY,CAACC,OAAO,CAACJ,QAAQ,CAAC;EAC3C,OAAOM,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;AACvC;AAEA,OAAO,SAASG,MAAMA,CAAA,EAAG;EACvBN,YAAY,CAACO,UAAU,CAACX,SAAS,CAAC;EAClCI,YAAY,CAACO,UAAU,CAACV,QAAQ,CAAC;AACnC;AAEA,OAAO,eAAeW,QAAQA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC,QAAQ;EAAEC,gBAAgB;EAAEC;AAAkB,CAAC,EAAE;EAChGC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE;IAAEN,MAAM;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,gBAAgB;IAAEC;EAAkB,CAAC,CAAC;EACjH,MAAMG,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGnB,OAAO,gBAAgB,EAAE;IAClDoB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;MAAEZ,MAAM;MAAEC,MAAM;MAAEC,QAAQ;MAAEC,gBAAgB;MAAEC;IAAkB,CAAC;EACxF,CAAC,CAAC;EACFC,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEC,GAAG,CAAC;EACvC,IAAI,CAACA,GAAG,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC1D,OAAO,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,KAAKA,CAACf,MAAM,EAAEC,QAAQ,EAAE;EAC5C,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,GAAGnB,OAAO,QAAQ,EAAE;IAC1CoB,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEhB,IAAI,CAACiB,SAAS,CAAC;MAAEX,MAAM;MAAEC;IAAS,CAAC;EAC3C,CAAC,CAAC;EACF,IAAI,CAACK,GAAG,CAACM,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACtD,MAAMG,IAAI,GAAG,MAAMV,GAAG,CAACQ,IAAI,CAAC,CAAC;EAC7BxB,YAAY,CAAC2B,OAAO,CAAC/B,SAAS,EAAE8B,IAAI,CAACE,KAAK,CAAC;EAC3C5B,YAAY,CAAC2B,OAAO,CAAC9B,QAAQ,EAAEO,IAAI,CAACiB,SAAS,CAACK,IAAI,CAACvB,IAAI,CAAC,CAAC;AAC3D","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}